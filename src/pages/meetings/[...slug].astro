---
import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import MeetingLayout from '../../layouts/MeetingLayout.astro';
// import type { MeetingType, Presentation, Image } from '../../models';

export async function getStaticPaths() {
    const meetingEntries = await getCollection('meetings');
    return meetingEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}
// interface Props {
//     meetingType: MeetingType;
//     meetingDate: Date;
//     main: Presentation;
//     base: Presentation;
//     image: Image;
// }
type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<MeetingLayout
    meetingType={entry.data.meetingType}
    meetingDate={entry.data.meetingDate}
    main={entry.data.main}
    base={entry.data.base}
    image={entry.data.image}
>
    <Content />
</MeetingLayout>
